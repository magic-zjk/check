<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jifeng.mapper.UserMapper">
	<resultMap id="BaseResultMap" type="User">
		<id column="USER_ID" property="userId" jdbcType="INTEGER" />
		<result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
		<result column="PASSWORD" property="password" jdbcType="VARCHAR" />
		<result column="REAL_NAME" property="realName" jdbcType="VARCHAR" />
		<result column="SALT" property="salt" jdbcType="VARCHAR" />
		<result column="AGE" property="age" jdbcType="INTEGER" />
		<result column="SEX" property="sex" jdbcType="INTEGER" />
		<result column="PHONE" property="phone" jdbcType="VARCHAR" />
		<result column="STATUS" property="status" jdbcType="INTEGER" />	
	</resultMap>
	<resultMap id="ResultMapContainRole" type="User">
		<id column="USER_ID" property="userId" jdbcType="INTEGER" />
		<result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
		<result column="PASSWORD" property="password" jdbcType="VARCHAR" />
		<result column="REAL_NAME" property="realName" jdbcType="VARCHAR" />
		<result column="SALT" property="salt" jdbcType="VARCHAR" />
		<result column="AGE" property="age" jdbcType="INTEGER" />
		<result column="SEX" property="sex" jdbcType="INTEGER" />
		<result column="PHONE" property="phone" jdbcType="VARCHAR" />
		<result column="STATUS" property="status" jdbcType="INTEGER" />
		<collection property="roles" ofType="Role" 	column="USER_ID"
		 	select="com.jifeng.mapper.RoleMapper.selectRoleByUserId"/>
	</resultMap>
	<sql id="Base_Column_List">
		USER_ID, USER_NAME, PASSWORD, REAL_NAME, SALT, AGE, SEX, PHONE, STATUS
	</sql>
	<select id="queryUserListPage" parameterType="page" resultMap="ResultMapContainRole" useCache="false">
		select
		<include refid="Base_Column_List" />
		from sys_user
		where STATUS != 1
		<if test="pd.roleId != null and pd.roleId != ''">
			and  USER_ID in (select USER_ID from sys_user_role where ROLE_ID=${pd.roleId})
		</if>
		<if test="pd.userName != null and pd.userName != ''">
			and USER_NAME like '%${pd.userName}%'
		</if>
	</select>
	<select id="queryUserList" parameterType="pd" resultMap="ResultMapContainRole" useCache="false">
		select
		<include refid="Base_Column_List" />
		from sys_user
		where STATUS != 1
		<if test="roleKey != null and roleKey != ''">
			and  USER_ID in (
					select sur.USER_ID 
					from sys_user_role sur 
					left join sys_role sr on sur.role_id = sr.role_id
					where sr.ROLE_KEY = #{roleKey,jdbcType=VARCHAR}
					)
		</if>
	</select>
	<select id="selectByUserId" parameterType="java.lang.Integer" resultMap="ResultMapContainRole" useCache="false">
		select
		<include refid="Base_Column_List" />
		from sys_user
		where USER_ID = #{userId,jdbcType=INTEGER}
	</select>
	<select id="selectByUserName" parameterType="java.lang.String" resultMap="BaseResultMap" useCache="false">
		select
		<include refid="Base_Column_List" />
		from sys_user
		where USER_NAME = #{userName,jdbcType=VARCHAR}
	</select>
	<select id="validateUserName" parameterType="pd" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_user
		where 1=1
		<if test="userId != null and userId != ''">
			and USER_ID != #{userId,jdbcType=INTEGER}
		</if>
			and USER_NAME = #{userName,jdbcType=VARCHAR}
	</select>
	<insert id="insert" parameterType="User" useGeneratedKeys="true" keyProperty="userId">
		insert into sys_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				USER_ID,
			</if>
			<if test="userName != null">
				USER_NAME,
			</if>
			<if test="password != null">
				PASSWORD,
			</if>
			<if test="realName != null">
				REAL_NAME,
			</if>
			<if test="salt != null">
				SALT,
			</if>
			<if test="age != null">
				AGE,
			</if>
			<if test="sex != null">
				SEX,
			</if>
			<if test="phone != null">
				PHONE,
			</if>
			<if test="status != null">
				STATUS,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="realName != null">
				#{realName,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				#{salt,jdbcType=VARCHAR},
			</if>
			<if test="age != null">
				#{age,jdbcType=INTEGER},
			</if>
			<if test="sex != null">
				#{sex,jdbcType=INTEGER},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="update" parameterType="User">
		update sys_user
		<set>
			<if test="userName != null">
				USER_NAME = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				PASSWORD = #{password,jdbcType=VARCHAR},
			</if>
			<if test="realName != null">
				REAL_NAME = #{realName,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				SALT = #{salt,jdbcType=VARCHAR},
			</if>
				AGE = #{age,jdbcType=INTEGER},
				SEX = #{sex,jdbcType=INTEGER},
				PHONE = #{phone,jdbcType=VARCHAR},
			<if test="status != null">
				STATUS = #{status,jdbcType=INTEGER},
			</if>
		</set>
		where USER_ID = #{userId,jdbcType=INTEGER}
	</update>
	<delete id="deleteByUserId" parameterType="java.lang.Integer">
		delete from sys_user
		where USER_ID = #{userId,jdbcType=INTEGER}
	</delete>
</mapper>